{"version":3,"sources":["../../src/default-validator.service.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAA,EAAW,MAAO,eAAA,CAAgB;AAC3C,OAAO,EAAE,SAAA,EAAU,MAAO,gBAAA,CAAiB;AAK3C;IAAA;IAWA,CAAC;IATC,iDAAe,GAAf;QACE,MAAM,CAAC,IAAI,SAAS,CAAC,EAAE,CAAC,CAAC;IAC3B,CAAC;IACI,kCAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,UAAU,EAAE;KACnB,CAAC;IACF,kBAAkB;IACX,sCAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;IACF,8BAAC;CAXD,AAWC,IAAA;SAXY,uBAAuB","file":"default-validator.service.js","sourceRoot":"","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\n\r\nimport { ValidatorService } from './validator.service';\r\n\r\n\r\nexport class DefaultValidatorService implements ValidatorService {\r\n\r\n  getRowValidator(): FormGroup {\r\n    return new FormGroup({});\r\n  }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}